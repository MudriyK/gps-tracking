{"version":3,"file":"static/js/180.5ec28fb8.chunk.js","mappings":"mBAAA,MAsBMA,EAAuB,CAC3BC,WAAY,IACZC,QAAS,IACTC,oBAAoB,GCvBtB,MAAMC,EAAa,ICGnB,MACEC,WAAAA,GACEC,KAAKC,QAAU,IACjB,CAWAC,aAAAA,CAAcC,EAAiBC,GAA8B,IAAfC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnD,gBAAiBG,UACnBT,KAAKC,QAAUQ,UAAUC,YAAYC,eAClCC,IACCT,EAAgBS,EAAS,IAE1BC,IACCT,EAAcS,EAAM,GAEtB,IACKnB,EACHW,YAIJS,QAAQD,MAAM,gDAElB,CACAE,YAAAA,GACuB,OAAjBf,KAAKC,UACPQ,UAAUC,YAAYM,WAAWhB,KAAKC,SACtCD,KAAKC,QAAU,KACfa,QAAQG,IAAI,8BAEhB,GDtCFC,KAAKC,UAAaC,IACM,UAAlBA,EAAEC,KAAKC,OACTxB,EAAWI,eACTqB,UACET,QAAQG,IAAI,aAAcL,GAG1BM,KAAKM,YAAYZ,EAAS,IAE3BC,IACCC,QAAQD,MAAM,mBAAoBA,EAAMY,QAAQ,IAGzB,SAAlBL,EAAEC,KAAKC,QAAqBF,EAAEC,KAAKpB,SAC5CH,EAAWiB,cACb,C","sources":["constants.js","serviceWorkers/geoLocationWorker.js","services/GeolocationWatcher.js"],"sourcesContent":["const GOOGLE_API_KEY = \"AIzaSyBjZiK7hyPugpdsy8smXoTgUS-LbCIpLxc\";\n\nconst MAP_DEFAULT_ZOOM = 16;\n\nconst MOCKED_GPS_DATA = [\n  { coords: { latitude: 48.6415658, longitude: 22.28756 } },\n  { coords: { latitude: 48.641, longitude: 22.288062 } },\n  { coords: { latitude: 48.64058215369482, longitude: 22.286881880368163 } },\n  { coords: { latitude: 48.640798, longitude: 22.285227 } },\n  { coords: { latitude: 48.640104974973376, longitude: 22.284553493298773 } },\n  { coords: { latitude: 48.639747, longitude: 22.283871 } },\n  { coords: { latitude: 48.638811, longitude: 22.284282 } },\n  { coords: { latitude: 48.638667, longitude: 22.284454 } },\n  { coords: { latitude: 48.640655, longitude: 22.281838 } },\n  { coords: { latitude: 48.641246, longitude: 22.283178 } },\n  { coords: { latitude: 48.641342, longitude: 22.284898 } },\n  { coords: { latitude: 48.641785, longitude: 22.285238 } },\n  { coords: { latitude: 48.641634, longitude: 22.286743 } },\n  { coords: { latitude: 48.641833, longitude: 22.287064 } },\n  { coords: { latitude: 48.6415658, longitude: 22.28756 } },\n];\n\nconst GEO_LOCATION_OPTIONS = {\n  maximumAge: 5000, // Accept a cached position whose age is no greater than the specified time in milliseconds\n  timeout: 5000, // The maximum length of time (in milliseconds) the device is allowed to take in order to return a position\n  enableHighAccuracy: true, // Provides a hint that the application needs the best possible results\n};\n\nexport { GOOGLE_API_KEY, MAP_DEFAULT_ZOOM, MOCKED_GPS_DATA, GEO_LOCATION_OPTIONS };\n","import { GeolocationWatcher } from \"../services\";\n\nconst geoWatcher = new GeolocationWatcher();\n\n//eslint-disable-next-line no-restricted-globals\nself.onmessage = (e) => {\n  if (e.data.action === \"START\") {\n    geoWatcher.startWatching(\n      async (position) => {\n        console.log(\"Position: \", position);\n\n        // eslint-disable-next-line no-restricted-globals\n        self.postMessage(position);\n      },\n      (error) => {\n        console.error(\"Error occurred: \", error.message);\n      }\n    );\n  } else if (e.data.action === \"STOP\" && e.data.watchID) {\n    geoWatcher.stopWatching();\n  }\n};\n","import {\n  // MOCKED_GPS_DATA,\n  GEO_LOCATION_OPTIONS\n} from \"../constants\";\n\nclass GeolocationWatcher {\n  constructor() {\n    this.watchID = null;\n  }\n\n  // startWatchingMock(successCallback, errorCallback) {\n  //   let currentIndex = 0;\n  //\n  //   setInterval(() => {\n  //     successCallback(MOCKED_GPS_DATA[currentIndex]);\n  //     currentIndex++;\n  //   }, 4000);\n  // }\n\n  startWatching(successCallback, errorCallback, options = {}) {\n    if (\"geolocation\" in navigator) {\n      this.watchID = navigator.geolocation.watchPosition(\n        (position) => {\n          successCallback(position);\n        },\n        (error) => {\n          errorCallback(error);\n        },\n        {\n          ...GEO_LOCATION_OPTIONS,\n          options\n        }\n      );\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }\n  stopWatching() {\n    if (this.watchID !== null) {\n      navigator.geolocation.clearWatch(this.watchID);\n      this.watchID = null; // Reset the watchID after stopping\n      console.log(\"Stopped watching position.\");\n    }\n  }\n}\n\nexport { GeolocationWatcher };\n"],"names":["GEO_LOCATION_OPTIONS","maximumAge","timeout","enableHighAccuracy","geoWatcher","constructor","this","watchID","startWatching","successCallback","errorCallback","options","arguments","length","undefined","navigator","geolocation","watchPosition","position","error","console","stopWatching","clearWatch","log","self","onmessage","e","data","action","async","postMessage","message"],"sourceRoot":""}