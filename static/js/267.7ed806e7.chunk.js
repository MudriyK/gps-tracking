self.onmessage=e=>{switch(e.data.action){case"getTotalDistance":{const{map:t,routeData:a}=e.data;let n=0;if(a.length<2)return n;const o=a.map((e=>{let{lat:a,lng:n}=e;return new t.LatLng(a,n)}));for(let e=0;e<o.length-1;e++)n+=t.geometry.spherical.computeDistanceBetween(o[e],o[e+1]);return self.postMessage({action:"computedTotalDistance",value:n})}case"renderRoute":{const{map:t,polyline:a,path:n}=e.data;if(!t)return;return a&&a.setMap(null),void new t.Polyline({path:n,geodesic:!0,strokeColor:"#FF0000",strokeOpacity:1,strokeWeight:2}).setMap(t)}case"renderMarker":{const{map:t,waypoint:a}=e.data,n=new t.Marker({position:{lat:a.lat,lng:a.lng},map:t}),o=new t.InfoWindow({content:a.content});return void n.addListener("click",(()=>{o.open({anchor:n,map:t,shouldFocus:!1})}))}default:return null}};
//# sourceMappingURL=267.7ed806e7.chunk.js.map